let generate:3 load "std/list/generate";
let map:2 load "std/list/map";

nb generates a fixed length gene sequence via a generation strategy object
fn Generator(length rate strategy)
	#"length" length
	#"rate" rate
	#"strategy" strategy

	#"spawn" fn(this)
		tail generate nil ++ ."length"this fn()
			as(."create"."strategy"this):1 ."strategy"this
		;
	;

	#"mutate" fn(this parent)
		map parent fn(gene)
			if < random ."rate"this
				fn() as(."mutate"."strategy"this):2 ."strategy"this gene;
				fn() gene;
		;
	;
{};
