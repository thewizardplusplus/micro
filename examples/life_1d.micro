nb http://www.rosettacode.org/wiki/One-dimensional_cellular_automata

let generate:2 load "libs/list/generate";
let last:1 load "libs/list/last";
let reverse:1 load "libs/list/reverse";
let for_each:2 load "libs/list/for_each";
let ansi:2 load "libs/cli/ansi";

fn populate_cell(previous_cell current_cell next_cell)
	let neighbours + previous_cell next_cell;
	if current_cell
		fn() == 1 neighbours;
		fn() == 2 neighbours;
;

fn populate(field)
	let front_cell last field;
	let back_cell head field;
	reverse <<@ as(fn _populate(
		old_front_cell
		old_field
		old_back_cell
		new_field
	)
		if != [] old_field
			fn()
				let previous_cell old_front_cell;
				let current_cell head old_field;
				let next_cell
					if != [] tail old_field
						fn() head tail old_field;
						fn() old_back_cell;
				;
				let populated_cell
					populate_cell previous_cell current_cell next_cell
				;
				>@fn()
					_populate
						head old_field
						tail old_field
						old_back_cell
						, populated_cell new_field
				;
			;
			fn() new_field;
	;):4 front_cell field back_cell []
;

fn iterate_populations(field handler:1)
	<<@ as(fn _iterate_populations(previous_field field)
		if != previous_field field
			fn()
				handler field

				>@fn() _iterate_populations field populate field;
			;
			fn();
	;):2 [] field
;

let start_field generate 80 fn()
	> random 0.5
;;
iterate_populations start_field fn(field)
	for_each field fn(cell)
		out
			if cell
				fn() ansi "bold" ansi "white" "#";
				fn() ansi "black" ".";
	;

	outln ""
;
