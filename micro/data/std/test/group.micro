let generate:3 load "../list/generate";
let filter:2 load "../list/filter";
let ansi:2 load "../cli/ansi";

let LINE_WIDTH 80;

fn generate_line(length symbol)
	tail generate nil ++ length fn()
		symbol
	;
;

fn count(list value)
	size filter list fn(item)
		== item value
	;
;

fn format_results(results)
	+ "total: " + str size results + "  "
	+ ansi "green" + "success: " str count results true + "  "
	ansi "red" + "failure: " str count results false
;

fn group(name tests)
	if != "" name
		fn()
			outln
				+ generate_line LINE_WIDTH '=' + "\n"
				+ ansi "bold" name + "\n"
				generate_line LINE_WIDTH '-'
		;
		fn();

	let results tests;
	outln
		+ generate_line LINE_WIDTH '-' + "\n"
		format_results results

	results
;
